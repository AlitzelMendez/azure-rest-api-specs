{
  "swagger": "2.0",
  "info": {
    "title": "DiskResourceProviderClient",
    "version": "2024-03-02",
    "description": "The Disk Resource Provider Client."
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskAccesses": {
      "get": {
        "operationId": "DiskAccesses_List",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Lists all the disk access resources under a subscription.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskAccessList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "list all disk access resources in a subscription.": {
            "$ref": "./examples/diskAccessExamples/DiskAccess_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskEncryptionSets": {
      "get": {
        "operationId": "DiskEncryptionSets_List",
        "tags": [
          "DiskEncryptionSets"
        ],
        "description": "Lists all the disk encryption sets under a subscription.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSetList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "list all disk encryption sets in a subscription.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks": {
      "get": {
        "operationId": "Disks_List",
        "tags": [
          "Disks"
        ],
        "description": "Lists all the disks under a subscription.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskList"
            }
          }
        },
        "x-ms-examples": {
          "list all managed disks in a subscription.": {
            "$ref": "./examples/diskExamples/Disk_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots": {
      "get": {
        "operationId": "Snapshots_List",
        "tags": [
          "Snapshots"
        ],
        "description": "Lists snapshots under a subscription.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotList"
            }
          }
        },
        "x-ms-examples": {
          "list all snapshots in a subscription.": {
            "$ref": "./examples/snapshotExamples/Snapshot_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses": {
      "get": {
        "operationId": "DiskAccesses_ListByResourceGroup",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Lists all the disk access resources under a resource group.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskAccessList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "list all disk access resources in a resource group.": {
            "$ref": "./examples/diskAccessExamples/DiskAccess_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}": {
      "get": {
        "operationId": "DiskAccesses_Get",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Gets information about a disk access resource.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskAccess"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get information about a disk access resource with private endpoints.": {
            "$ref": "./examples/diskAccessExamples/DiskAccess_Get_WithPrivateEndpoints.json"
          },
          "get information about a disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccess_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DiskAccesses_CreateOrUpdate",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Creates or updates a disk access resource",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "diskAccess",
            "in": "body",
            "description": "disk access object supplied in the body of the Put disk access operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiskAccess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskAccess"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DiskAccess"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "create a disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccess_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DiskAccesses_Update",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Updates (patches) a disk access resource.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "diskAccess",
            "in": "body",
            "description": "disk access object supplied in the body of the Patch disk access operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiskAccessUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskAccess"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DiskAccess"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "update a disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccess_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DiskAccesses_Delete",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Deletes a disk access resource.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "If the disk access resource is already deleted, this is an expected error code."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "delete a disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccess_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections": {
      "get": {
        "operationId": "DiskAccesses_ListPrivateEndpointConnections",
        "tags": [
          "DiskAccesses"
        ],
        "description": "List information about private endpoint connections under a disk access resource",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get information about a private endpoint connection under a disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccessPrivateEndpointConnection_ListByDiskAccess.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "DiskAccesses_GetAPrivateEndpointConnection",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Gets information about a private endpoint connection under a disk access resource.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get information about a private endpoint connection under a disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccessPrivateEndpointConnection_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DiskAccesses_UpdateAPrivateEndpointConnection",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Approve or reject a private endpoint connection under disk access resource, this can't be used to create a new private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "private endpoint connection object supplied in the body of the Put private endpoint connection operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "approve a Private Endpoint Connection under a disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccessPrivateEndpointConnection_Approve.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DiskAccesses_DeleteAPrivateEndpointConnection",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Deletes a private endpoint connection under a disk access resource.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "If the private endpoint connection is already deleted, this is an expected error code."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "delete a private endpoint connection under a disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccessPrivateEndpointConnection_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateLinkResources": {
      "get": {
        "operationId": "DiskAccesses_GetPrivateLinkResources",
        "tags": [
          "DiskAccesses"
        ],
        "description": "Gets the private link resources possible under disk access resource",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskAccessNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          }
        },
        "x-ms-examples": {
          "list all possible private link resources under disk access resource.": {
            "$ref": "./examples/diskAccessExamples/DiskAccessPrivateLinkResources_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets": {
      "get": {
        "operationId": "DiskEncryptionSets_ListByResourceGroup",
        "tags": [
          "DiskEncryptionSets"
        ],
        "description": "Lists all the disk encryption sets under a resource group.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSetList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "list all disk encryption sets in a resource group.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}": {
      "get": {
        "operationId": "DiskEncryptionSets_Get",
        "tags": [
          "DiskEncryptionSets"
        ],
        "description": "Gets information about a disk encryption set.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskEncryptionSetNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get information about a disk encryption set when auto-key rotation failed.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Get_WithAutoKeyRotationError.json"
          },
          "get information about a disk encryption set.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DiskEncryptionSets_CreateOrUpdate",
        "tags": [
          "DiskEncryptionSets"
        ],
        "description": "Creates or updates a disk encryption set",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskEncryptionSetNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "diskEncryptionSet",
            "in": "body",
            "description": "disk encryption set object supplied in the body of the Put disk encryption set operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSet"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "create a disk encryption set with key vault from a different subscription.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Create_WithKeyVaultFromADifferentSubscription.json"
          },
          "create a disk encryption set with key vault from a different tenant.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Create_WithKeyVaultFromADifferentTenant.json"
          },
          "create a disk encryption set.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DiskEncryptionSets_Update",
        "tags": [
          "DiskEncryptionSets"
        ],
        "description": "Updates (patches) a disk encryption set.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskEncryptionSetNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "diskEncryptionSet",
            "in": "body",
            "description": "disk encryption set object supplied in the body of the Patch disk encryption set operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSet"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DiskEncryptionSet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "update a disk encryption set with rotationToLatestKeyVersionEnabled set to true - Succeeded": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Update_WithRotationToLatestKeyVersionEnabled.json"
          },
          "update a disk encryption set with rotationToLatestKeyVersionEnabled set to true - Updating": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Update_WithRotationToLatestKeyVersionEnabledInProgress.json"
          },
          "update a disk encryption set.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DiskEncryptionSets_Delete",
        "tags": [
          "DiskEncryptionSets"
        ],
        "description": "Deletes a disk encryption set.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskEncryptionSetNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "If the disk encryption set is already deleted, this is an expected error code."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "delete a disk encryption set.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}/associatedResources": {
      "get": {
        "operationId": "DiskEncryptionSets_ListAssociatedResources",
        "tags": [
          "DiskEncryptionSets"
        ],
        "description": "Lists all resources that are encrypted with this disk encryption set.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskEncryptionSetNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceUriList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "list all resources that are encrypted with this disk encryption set.": {
            "$ref": "./examples/diskEncryptionSetExamples/DiskEncryptionSet_ListAssociatedResources.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks": {
      "get": {
        "operationId": "Disks_ListByResourceGroup",
        "tags": [
          "Disks"
        ],
        "description": "Lists all the disks under a resource group.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskList"
            }
          }
        },
        "x-ms-examples": {
          "list all managed disks in a resource group.": {
            "$ref": "./examples/diskExamples/Disk_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}": {
      "get": {
        "operationId": "Disks_Get",
        "tags": [
          "Disks"
        ],
        "description": "Gets information about a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        },
        "x-ms-examples": {
          "get information about a managed disk.": {
            "$ref": "./examples/diskExamples/Disk_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Disks_CreateOrUpdate",
        "tags": [
          "Disks"
        ],
        "description": "Creates or updates a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "disk",
            "in": "body",
            "description": "Disk object supplied in the body of the Put disk operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        },
        "x-ms-examples": {
          "create a confidential VM supported disk encrypted with customer managed key": {
            "$ref": "./examples/diskExamples/Disk_Create_ConfidentialVMSupportedDiskEncryptedWithCMK.json"
          },
          "create a managed disk and associate with disk access resource.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithDiskAccess.json"
          },
          "create a managed disk and associate with disk encryption set.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithDiskEncryptionSet.json"
          },
          "create a managed disk by copying a snapshot.": {
            "$ref": "./examples/diskExamples/Disk_Create_ByCopyingASnapshot.json"
          },
          "create a managed disk by importing an unmanaged blob from a different subscription.": {
            "$ref": "./examples/diskExamples/Disk_Create_ByImportingBlobFromADifferentSubscription.json"
          },
          "create a managed disk by importing an unmanaged blob from the same subscription.": {
            "$ref": "./examples/diskExamples/Disk_Create_ByImportingBlobFromTheSameSubscription.json"
          },
          "create a managed disk from ImportSecure create option": {
            "$ref": "./examples/diskExamples/Disk_Create_FromImportSecure.json"
          },
          "create a managed disk from UploadPreparedSecure create option": {
            "$ref": "./examples/diskExamples/Disk_Create_FromUploadPreparedSecure.json"
          },
          "create a managed disk from a platform image.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAPlatformImage.json"
          },
          "create a managed disk from an Azure Compute Gallery community image.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnAzureComputeGalleryCommunityImage.json"
          },
          "create a managed disk from an Azure Compute Gallery direct shared image.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnAzureComputeGalleryDirectSharedImage.json"
          },
          "create a managed disk from an Azure Compute Gallery image.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnAzureComputeGalleryImage.json"
          },
          "create a managed disk from an existing managed disk in the same or different subscription.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnExistingManagedDisk.json"
          },
          "create a managed disk from elastic san volume snapshot.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnElasticSanVolumeSnapshot.json"
          },
          "create a managed disk with dataAccessAuthMode": {
            "$ref": "./examples/diskExamples/Disk_Create_WithDataAccessAuthMode.json"
          },
          "create a managed disk with optimizedForFrequentAttach.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithOptimizedForFrequentAttach.json"
          },
          "create a managed disk with performancePlus.": {
            "$ref": "./examples/diskExamples/Disk_Create_PerformancePlus.json"
          },
          "create a managed disk with premium v2 account type.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithPremiumV2_LRSAccountType.json"
          },
          "create a managed disk with security profile": {
            "$ref": "./examples/diskExamples/Disk_Create_WithSecurityProfile.json"
          },
          "create a managed disk with ssd zrs account type.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithSSDZRSAccountType.json"
          },
          "create a managed disk with ultra account type with readOnly property set.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithUltraSSD_ReadOnly.json"
          },
          "create a managed upload disk.": {
            "$ref": "./examples/diskExamples/Disk_Create_UploadDisk.json"
          },
          "create an empty managed disk in extended location.": {
            "$ref": "./examples/diskExamples/Disk_Create_InExtendedLocation.json"
          },
          "create an empty managed disk.": {
            "$ref": "./examples/diskExamples/Disk_Create_Empty.json"
          },
          "create an ultra managed disk with logicalSectorSize 512E": {
            "$ref": "./examples/diskExamples/Disk_Create_WithLogicalSectorSize.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Disks_Update",
        "tags": [
          "Disks"
        ],
        "description": "Updates (patches) a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "disk",
            "in": "body",
            "description": "Disk object supplied in the body of the Patch disk operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiskUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        },
        "x-ms-examples": {
          "create or update a bursting enabled managed disk.": {
            "$ref": "./examples/diskExamples/Disk_CreateOrUpdate_BurstingEnabled.json"
          },
          "update a managed disk to add accelerated networking.": {
            "$ref": "./examples/diskExamples/Disk_Update_AddAcceleratedNetworking.json"
          },
          "update a managed disk to add architecture.": {
            "$ref": "./examples/diskExamples//Disk_Update_ToAddArchitecture.json"
          },
          "update a managed disk to add purchase plan.": {
            "$ref": "./examples/diskExamples/Disk_Update_AddPurchasePlan.json"
          },
          "update a managed disk to add supportsHibernation.": {
            "$ref": "./examples/diskExamples/Disk_Update_AddSupportsHibernation.json"
          },
          "update a managed disk to change tier.": {
            "$ref": "./examples/diskExamples/Disk_Update_ChangeTier.json"
          },
          "update a managed disk to disable bursting.": {
            "$ref": "./examples/diskExamples/Disk_Update_DisableBursting.json"
          },
          "update a managed disk to disable optimizedForFrequentAttach.": {
            "$ref": "./examples/diskExamples//Disk_Update_DisableOptimizedForFrequentAttach.json"
          },
          "update a managed disk with diskControllerTypes.": {
            "$ref": "./examples/diskExamples//Disk_Update_AddDiskControllerTypes.json"
          },
          "update managed disk to remove disk access resource association.": {
            "$ref": "./examples/diskExamples/Disk_Update_RemoveDiskAccess.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Disks_Delete",
        "tags": [
          "Disks"
        ],
        "description": "Deletes a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "If the disk is deleted, this is an expected error code."
          }
        },
        "x-ms-examples": {
          "delete a managed disk.": {
            "$ref": "./examples/diskExamples/Disk_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess": {
      "post": {
        "operationId": "Disks_GrantAccess",
        "tags": [
          "Disks"
        ],
        "description": "Grants access to a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "grantAccessData",
            "in": "body",
            "description": "Access data object supplied in the body of the get disk access operation.",
            "required": true,
            "schema": {
              "$ref": "./diskRPCommon.json#/definitions/GrantAccessData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./diskRPCommon.json#/definitions/AccessUri"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-examples": {
          "get a sas on a managed disk.": {
            "$ref": "./examples/diskExamples/Disk_BeginGetAccess.json"
          },
          "get sas on managed disk and VM guest state": {
            "$ref": "./examples/diskExamples/Disk_BeginGetAccess_WithVMGuestState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess": {
      "post": {
        "operationId": "Disks_RevokeAccess",
        "tags": [
          "Disks"
        ],
        "description": "Revokes access to a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-examples": {
          "revoke access to a managed disk.": {
            "$ref": "./examples/diskExamples/Disk_EndGetAccess.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints": {
      "get": {
        "operationId": "DiskRestorePoint_ListByRestorePoint",
        "tags": [
          "IncrementalRestorePoints"
        ],
        "description": "Lists diskRestorePoints under a vmRestorePoint.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RestorePointCollectionNameParameter"
          },
          {
            "$ref": "#/parameters/VmRestorePointNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskRestorePointList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get an incremental disk restorePoint resource.": {
            "$ref": "./examples/diskRestorePointExamples/DiskRestorePoint_ListByVmRestorePoint.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}": {
      "get": {
        "operationId": "DiskRestorePoint_Get",
        "tags": [
          "IncrementalRestorePoints"
        ],
        "description": "Get disk restorePoint resource",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RestorePointCollectionNameParameter"
          },
          {
            "$ref": "#/parameters/VmRestorePointNameParameter"
          },
          {
            "$ref": "#/parameters/DiskRestorePointNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskRestorePoint"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get an incremental disk restorePoint resource.": {
            "$ref": "./examples/diskRestorePointExamples/DiskRestorePoint_Get.json"
          },
          "get an incremental disk restorePoint when source resource is from a different region": {
            "$ref": "./examples/diskRestorePointExamples/DiskRestorePoint_Get_WhenSourceResourceIsFromDifferentRegion.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/beginGetAccess": {
      "post": {
        "operationId": "DiskRestorePoint_GrantAccess",
        "tags": [
          "IncrementalRestorePoints"
        ],
        "description": "Grants access to a diskRestorePoint.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RestorePointCollectionNameParameter"
          },
          {
            "$ref": "#/parameters/VmRestorePointNameParameter"
          },
          {
            "$ref": "#/parameters/DiskRestorePointNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "grantAccessData",
            "in": "body",
            "description": "Access data object supplied in the body of the get disk access operation.",
            "required": true,
            "schema": {
              "$ref": "./diskRPCommon.json#/definitions/GrantAccessData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./diskRPCommon.json#/definitions/AccessUri"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "grants access to a diskRestorePoint.": {
            "$ref": "./examples/diskRestorePointExamples/DiskRestorePoint_BeginGetAccess.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/endGetAccess": {
      "post": {
        "operationId": "DiskRestorePoint_RevokeAccess",
        "tags": [
          "IncrementalRestorePoints"
        ],
        "description": "Revokes access to a diskRestorePoint.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RestorePointCollectionNameParameter"
          },
          {
            "$ref": "#/parameters/VmRestorePointNameParameter"
          },
          {
            "$ref": "#/parameters/DiskRestorePointNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "revokes access to a diskRestorePoint.": {
            "$ref": "./examples/diskRestorePointExamples/DiskRestorePoint_EndGetAccess.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots": {
      "get": {
        "operationId": "Snapshots_ListByResourceGroup",
        "tags": [
          "Snapshots"
        ],
        "description": "Lists snapshots under a resource group.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotList"
            }
          }
        },
        "x-ms-examples": {
          "list all snapshots in a resource group.": {
            "$ref": "./examples/snapshotExamples/Snapshot_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}": {
      "get": {
        "operationId": "Snapshots_Get",
        "tags": [
          "Snapshots"
        ],
        "description": "Gets information about a snapshot.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SnapshotNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "x-ms-examples": {
          "get information about a snapshot.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Get.json"
          },
          "get information about an incremental snapshot.": {
            "$ref": "./examples/snapshotExamples/Snapshot_GetIncrementalSnapshot.json"
          }
        }
      },
      "put": {
        "operationId": "Snapshots_CreateOrUpdate",
        "tags": [
          "Snapshots"
        ],
        "description": "Creates or updates a snapshot.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SnapshotNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "snapshot",
            "in": "body",
            "description": "Snapshot object supplied in the body of the Put disk operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "x-ms-examples": {
          "create a snapshot by importing an unmanaged blob from a different subscription.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Create_ByImportingAnUnmanagedBlobFromADifferentSubscription.json"
          },
          "create a snapshot by importing an unmanaged blob from the same subscription.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Create_ByImportingAnUnmanagedBlobFromTheSameSubscription.json"
          },
          "create a snapshot from an elastic san volume snapshot.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Create_FromAnElasticSanVolumeSnapshot.json"
          },
          "create a snapshot from an existing snapshot in the same or a different subscription in a different region with quicker copy speed.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Create_EnhancedProvisionedBandwidthCopySpeed.json"
          },
          "create a snapshot from an existing snapshot in the same or a different subscription in a different region.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Create_FromAnExistingSnapshotInDifferentRegion.json"
          },
          "create a snapshot from an existing snapshot in the same or a different subscription.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Create_FromAnExistingSnapshot.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Snapshots_Update",
        "tags": [
          "Snapshots"
        ],
        "description": "Updates (patches) a snapshot.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SnapshotNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "snapshot",
            "in": "body",
            "description": "Snapshot object supplied in the body of the Patch snapshot operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        },
        "x-ms-examples": {
          "update a snapshot with accelerated networking.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Update_WithAcceleratedNetwork.json"
          },
          "update a snapshot.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Snapshots_Delete",
        "tags": [
          "Snapshots"
        ],
        "description": "Deletes a snapshot.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SnapshotNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "If the snapshot is deleted, this is an expected error code."
          }
        },
        "x-ms-examples": {
          "delete a snapshot.": {
            "$ref": "./examples/snapshotExamples/Snapshot_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess": {
      "post": {
        "operationId": "Snapshots_GrantAccess",
        "tags": [
          "Snapshots"
        ],
        "description": "Grants access to a snapshot.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SnapshotNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "grantAccessData",
            "in": "body",
            "description": "Access data object supplied in the body of the get snapshot access operation.",
            "required": true,
            "schema": {
              "$ref": "./diskRPCommon.json#/definitions/GrantAccessData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./diskRPCommon.json#/definitions/AccessUri"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-examples": {
          "get a sas on a snapshot.": {
            "$ref": "./examples/snapshotExamples/Snapshot_BeginGetAccess.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess": {
      "post": {
        "operationId": "Snapshots_RevokeAccess",
        "tags": [
          "Snapshots"
        ],
        "description": "Revokes access to a snapshot.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SnapshotNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-examples": {
          "revoke access to a snapshot.": {
            "$ref": "./examples/snapshotExamples/Snapshot_EndGetAccess.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "accessUri": {
      "description": "A disk access SAS uri.",
      "properties": {
        "accessSAS": {
          "type": "string",
          "description": "A SAS uri for accessing a disk.",
          "readOnly": true
        },
        "securityDataAccessSAS": {
          "type": "string",
          "description": "A SAS uri for accessing a VM guest state.",
          "readOnly": true
        }
      }
    },
    "copyCompletionError": {
      "type": "object",
      "description": "Indicates the error details if the background copy of a resource created via the CopyStart operation fails.",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "Indicates the error code if the background copy of a resource created via the CopyStart operation fails.",
          "enum": [
            "CopySourceNotFound"
          ],
          "x-ms-enum": {
            "name": "CopyCompletionErrorReason",
            "modelAsString": true,
            "values": [
              {
                "value": "CopySourceNotFound",
                "description": "Indicates that the source snapshot was deleted while the background copy of the resource created via CopyStart operation was in progress."
              }
            ]
          }
        },
        "errorMessage": {
          "type": "string",
          "description": "Indicates the error message if the background copy of a resource created via the CopyStart operation fails."
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    },
    "creationData": {
      "description": "Data used when creating a disk.",
      "properties": {
        "createOption": {
          "type": "string",
          "description": "This enumerates the possible sources of a disk's creation.",
          "enum": [
            "Attach",
            "Copy",
            "CopyFromSanSnapshot",
            "CopyStart",
            "Empty",
            "FromImage",
            "Import",
            "ImportSecure",
            "Restore",
            "Upload",
            "UploadPreparedSecure"
          ],
          "x-ms-enum": {
            "name": "DiskCreateOption",
            "modelAsString": true,
            "values": [
              {
                "value": "Empty",
                "description": "Create an empty data disk of a size given by diskSizeGB."
              },
              {
                "value": "Attach",
                "description": "Disk will be attached to a VM."
              },
              {
                "value": "FromImage",
                "description": "Create a new disk from a platform image specified by the given imageReference or galleryImageReference."
              },
              {
                "value": "Import",
                "description": "Create a disk by importing from a blob specified by a sourceUri in a storage account specified by storageAccountId."
              },
              {
                "value": "Copy",
                "description": "Create a new disk or snapshot by copying from a disk or snapshot specified by the given sourceResourceId."
              },
              {
                "value": "Restore",
                "description": "Create a new disk by copying from a backup recovery point."
              },
              {
                "value": "Upload",
                "description": "Create a new disk by obtaining a write token and using it to directly upload the contents of the disk."
              },
              {
                "value": "CopyStart",
                "description": "Create a new disk by using a deep copy process, where the resource creation is considered complete only after all data has been copied from the source."
              },
              {
                "value": "ImportSecure",
                "description": "Similar to Import create option. Create a new Trusted Launch VM or Confidential VM supported disk by importing additional blob for VM guest state specified by securityDataUri in storage account specified by storageAccountId"
              },
              {
                "value": "UploadPreparedSecure",
                "description": "Similar to Upload create option. Create a new Trusted Launch VM or Confidential VM supported disk and upload using write token in both disk and VM guest state"
              },
              {
                "value": "CopyFromSanSnapshot",
                "description": "Create a new disk by exporting from elastic san volume snapshot"
              }
            ]
          }
        },
        "elasticSanResourceId": {
          "type": "string",
          "description": "Required if createOption is CopyFromSanSnapshot. This is the ARM id of the source elastic san volume snapshot."
        },
        "galleryImageReference": {
          "$ref": "#/definitions/ImageDiskReference",
          "description": "Required if creating from a Gallery Image. The id/sharedGalleryImageId/communityGalleryImageId of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk."
        },
        "imageReference": {
          "$ref": "#/definitions/ImageDiskReference",
          "description": "Disk source information for PIR or user images."
        },
        "logicalSectorSize": {
          "type": "integer",
          "format": "int32",
          "description": "Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default."
        },
        "performancePlus": {
          "type": "boolean",
          "description": "Set this flag to true to get a boost on the performance target of the disk deployed, see here on the respective performance target. This flag can only be set on disk creation time and cannot be disabled after enabled."
        },
        "provisionedBandwidthCopySpeed": {
          "type": "string",
          "description": "If this field is set on a snapshot and createOption is CopyStart, the snapshot will be copied at a quicker speed.",
          "enum": [
            "Enhanced",
            "None"
          ],
          "x-ms-enum": {
            "name": "ProvisionedBandwidthCopyOption",
            "modelAsString": true
          }
        },
        "securityDataUri": {
          "type": "string",
          "description": "If createOption is ImportSecure, this is the URI of a blob to be imported into VM guest state."
        },
        "sourceResourceId": {
          "type": "string",
          "description": "If createOption is Copy, this is the ARM id of the source snapshot or disk."
        },
        "sourceUniqueId": {
          "type": "string",
          "description": "If this field is set, this is the unique id identifying the source of this resource.",
          "readOnly": true
        },
        "sourceUri": {
          "type": "string",
          "description": "If createOption is Import, this is the URI of a blob to be imported into a managed disk."
        },
        "storageAccountId": {
          "type": "string",
          "description": "Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk."
        },
        "uploadSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer)."
        }
      },
      "required": [
        "createOption"
      ]
    },
    "dataAccessAuthMode": {
      "type": "string",
      "description": "Additional authentication requirements when exporting or uploading to a disk or snapshot.",
      "enum": [
        "AzureActiveDirectory",
        "None"
      ],
      "x-ms-enum": {
        "name": "DataAccessAuthMode",
        "modelAsString": true,
        "values": [
          {
            "value": "AzureActiveDirectory",
            "description": "When export/upload URL is used, the system checks if the user has an identity in Azure Active Directory and has necessary permissions to export/upload the data. Please refer to aka.ms/DisksAzureADAuth."
          },
          {
            "value": "None",
            "description": "No additional authentication would be performed when accessing export/upload URL."
          }
        ]
      }
    },
    "disk": {
      "description": "Disk resource.",
      "properties": {
        "extendedLocation": {
          "$ref": "../../../common-types/v1/common.json#/definitions/ExtendedLocation",
          "description": "The extended location where the disk will be created. Extended location cannot be changed."
        },
        "managedBy": {
          "type": "string",
          "description": "A relative URI containing the ID of the VM that has the disk attached.",
          "readOnly": true
        },
        "managedByExtended": {
          "type": "array",
          "description": "List of relative URIs containing the IDs of the VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DiskProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/DiskSku"
        },
        "zones": {
          "type": "array",
          "description": "The Logical zone list for Disk.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../common-types/v1/common.json#/definitions/Resource"
        }
      ]
    },
    "diskAccess": {
      "description": "disk access resource.",
      "properties": {
        "extendedLocation": {
          "$ref": "../../../common-types/v1/common.json#/definitions/ExtendedLocation",
          "description": "The extended location where the disk access will be created. Extended location cannot be changed."
        },
        "properties": {
          "$ref": "#/definitions/DiskAccessProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common-types/v1/common.json#/definitions/Resource"
        }
      ]
    },
    "diskAccessList": {
      "description": "The List disk access operation response.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of disk access resources. Call ListNext() with this to fetch the next page of disk access resources."
        },
        "value": {
          "type": "array",
          "description": "A list of disk access resources.",
          "items": {
            "$ref": "#/definitions/DiskAccess"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "diskAccessProperties": {
      "properties": {
        "privateEndpointConnections": {
          "type": "array",
          "description": "A readonly collection of private endpoint connections created on the disk. Currently only one endpoint connection is supported.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The disk access resource provisioning state.",
          "readOnly": true
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the disk access was created.",
          "readOnly": true
        }
      }
    },
    "diskAccessUpdate": {
      "description": "Used for updating a disk access resource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "diskEncryptionSet": {
      "description": "disk encryption set resource.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/EncryptionSetIdentity"
        },
        "properties": {
          "$ref": "#/definitions/EncryptionSetProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common-types/v1/common.json#/definitions/Resource"
        }
      ]
    },
    "diskEncryptionSetList": {
      "description": "The List disk encryption set operation response.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of disk encryption sets. Call ListNext() with this to fetch the next page of disk encryption sets."
        },
        "value": {
          "type": "array",
          "description": "A list of disk encryption sets.",
          "items": {
            "$ref": "#/definitions/DiskEncryptionSet"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "diskEncryptionSetType": {
      "type": "string",
      "description": "The type of key used to encrypt the data of the disk.",
      "enum": [
        "ConfidentialVmEncryptedWithCustomerKey",
        "EncryptionAtRestWithCustomerKey",
        "EncryptionAtRestWithPlatformAndCustomerKeys"
      ],
      "x-ms-enum": {
        "name": "DiskEncryptionSetType",
        "modelAsString": true,
        "values": [
          {
            "value": "EncryptionAtRestWithCustomerKey",
            "description": "Resource using diskEncryptionSet would be encrypted at rest with Customer managed key that can be changed and revoked by a customer."
          },
          {
            "value": "EncryptionAtRestWithPlatformAndCustomerKeys",
            "description": "Resource using diskEncryptionSet would be encrypted at rest with two layers of encryption. One of the keys is Customer managed and the other key is Platform managed."
          },
          {
            "value": "ConfidentialVmEncryptedWithCustomerKey",
            "description": "Confidential VM supported disk and VM guest state would be encrypted with customer managed key."
          }
        ]
      }
    },
    "diskEncryptionSetUpdate": {
      "description": "disk encryption set update resource.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/EncryptionSetIdentity"
        },
        "properties": {
          "$ref": "#/definitions/DiskEncryptionSetUpdateProperties",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "diskEncryptionSetUpdateProperties": {
      "description": "disk encryption set resource update properties.",
      "properties": {
        "activeKey": {
          "$ref": "#/definitions/KeyForDiskEncryptionSet"
        },
        "encryptionType": {
          "$ref": "#/definitions/DiskEncryptionSetType"
        },
        "federatedClientId": {
          "type": "string",
          "description": "Multi-tenant application client id to access key vault in a different tenant. Setting the value to 'None' will clear the property."
        },
        "rotationToLatestKeyVersionEnabled": {
          "type": "boolean",
          "description": "Set this flag to true to enable auto-updating of this disk encryption set to the latest key version."
        }
      }
    },
    "diskList": {
      "description": "The List Disks operation response.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of disks."
        },
        "value": {
          "type": "array",
          "description": "A list of disks.",
          "items": {
            "$ref": "#/definitions/Disk"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "diskProperties": {
      "description": "Disk resource properties.",
      "properties": {
        "burstingEnabled": {
          "type": "boolean",
          "description": "Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks."
        },
        "burstingEnabledTime": {
          "type": "string",
          "format": "date-time",
          "description": "Latest time when bursting was last enabled on a disk.",
          "readOnly": true
        },
        "completionPercent": {
          "type": "number",
          "description": "Percentage complete for the background copy when a resource is created via the CopyStart operation."
        },
        "creationData": {
          "$ref": "./diskRPCommon.json#/definitions/CreationData",
          "description": "Disk source information. CreationData information cannot be changed after the disk has been created."
        },
        "dataAccessAuthMode": {
          "$ref": "./diskRPCommon.json#/definitions/DataAccessAuthMode"
        },
        "diskAccessId": {
          "type": "string",
          "description": "ARM id of the DiskAccess resource for using private endpoints on disks."
        },
        "diskIOPSReadOnly": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes."
        },
        "diskIOPSReadWrite": {
          "type": "integer",
          "format": "int64",
          "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes."
        },
        "diskMBpsReadOnly": {
          "type": "integer",
          "format": "int64",
          "description": "The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."
        },
        "diskMBpsReadWrite": {
          "type": "integer",
          "format": "int64",
          "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."
        },
        "diskSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the disk in bytes. This field is read only.",
          "readOnly": true
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size."
        },
        "diskState": {
          "$ref": "./diskRPCommon.json#/definitions/DiskState",
          "description": "The state of the disk."
        },
        "encryption": {
          "$ref": "./diskRPCommon.json#/definitions/Encryption",
          "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys."
        },
        "encryptionSettingsCollection": {
          "$ref": "./diskRPCommon.json#/definitions/EncryptionSettingsCollection",
          "description": "Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot."
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
          "enum": [
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "HyperVGeneration",
            "modelAsString": true
          }
        },
        "lastOwnershipUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time when the ownership state of the disk was last changed i.e., the time the disk was last attached or detached from a VM or the time when the VM to which the disk was attached was deallocated or started.",
          "readOnly": true
        },
        "maxShares": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time."
        },
        "networkAccessPolicy": {
          "$ref": "./diskRPCommon.json#/definitions/NetworkAccessPolicy"
        },
        "optimizedForFrequentAttach": {
          "type": "boolean",
          "description": "Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine."
        },
        "osType": {
          "type": "string",
          "description": "The Operating System type.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          }
        },
        "propertyUpdatesInProgress": {
          "$ref": "#/definitions/PropertyUpdatesInProgress",
          "description": "Properties of the disk for which update is pending.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The disk provisioning state.",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "./diskRPCommon.json#/definitions/PublicNetworkAccess"
        },
        "purchasePlan": {
          "$ref": "./diskRPCommon.json#/definitions/PurchasePlan",
          "description": "Purchase plan information for the the image from which the OS disk was created. E.g. - {name: 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}"
        },
        "securityProfile": {
          "$ref": "./diskRPCommon.json#/definitions/DiskSecurityProfile",
          "description": "Contains the security related information for the resource."
        },
        "shareInfo": {
          "type": "array",
          "description": "Details of the list of all VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.",
          "items": {
            "$ref": "#/definitions/ShareInfoElement"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "vmUri"
          ]
        },
        "supportedCapabilities": {
          "$ref": "./diskRPCommon.json#/definitions/SupportedCapabilities",
          "description": "List of supported capabilities for the image from which the OS disk was created."
        },
        "supportsHibernation": {
          "type": "boolean",
          "description": "Indicates the OS on a disk supports hibernation."
        },
        "tier": {
          "type": "string",
          "description": "Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks."
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the disk was created.",
          "readOnly": true
        },
        "uniqueId": {
          "type": "string",
          "description": "Unique Guid identifying the resource.",
          "readOnly": true
        }
      },
      "required": [
        "creationData"
      ]
    },
    "diskRestorePoint": {
      "description": "Properties of disk restore point",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiskRestorePointProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ]
    },
    "diskRestorePointList": {
      "description": "The List Disk Restore Points operation response.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of disk restore points. Call ListNext() with this to fetch the next page of disk restore points."
        },
        "value": {
          "type": "array",
          "description": "A list of disk restore points.",
          "items": {
            "$ref": "#/definitions/DiskRestorePoint"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "diskRestorePointProperties": {
      "description": "Properties of an incremental disk restore point",
      "properties": {
        "completionPercent": {
          "type": "number",
          "description": "Percentage complete for the background copy of disk restore point when source resource is from a different region."
        },
        "diskAccessId": {
          "type": "string",
          "description": "ARM id of the DiskAccess resource for using private endpoints on disks."
        },
        "encryption": {
          "$ref": "./diskRPCommon.json#/definitions/Encryption",
          "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.",
          "readOnly": true
        },
        "familyId": {
          "type": "string",
          "description": "id of the backing snapshot's MIS family",
          "readOnly": true
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
          "enum": [
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "HyperVGeneration",
            "modelAsString": true
          }
        },
        "logicalSectorSize": {
          "type": "integer",
          "format": "int32",
          "description": "Logical sector size in bytes for disk restore points of UltraSSD_LRS and PremiumV2_LRS disks. Supported values are 512 and 4096. 4096 is the default.",
          "readOnly": true
        },
        "networkAccessPolicy": {
          "$ref": "./diskRPCommon.json#/definitions/NetworkAccessPolicy"
        },
        "osType": {
          "type": "string",
          "description": "The Operating System type.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "./diskRPCommon.json#/definitions/PublicNetworkAccess"
        },
        "purchasePlan": {
          "$ref": "./diskRPCommon.json#/definitions/PurchasePlan",
          "description": "Purchase plan information for the the image from which the OS disk was created."
        },
        "replicationState": {
          "type": "string",
          "description": "Replication state of disk restore point when source resource is from a different region.",
          "readOnly": true
        },
        "securityProfile": {
          "$ref": "./diskRPCommon.json#/definitions/DiskSecurityProfile",
          "description": "Contains the security related information for the resource."
        },
        "sourceResourceId": {
          "type": "string",
          "description": "arm id of source disk or source disk restore point.",
          "readOnly": true
        },
        "sourceResourceLocation": {
          "type": "string",
          "description": "Location of source disk or source disk restore point when source resource is from a different region.",
          "readOnly": true
        },
        "sourceUniqueId": {
          "type": "string",
          "description": "unique incarnation id of the source disk",
          "readOnly": true
        },
        "supportedCapabilities": {
          "$ref": "./diskRPCommon.json#/definitions/SupportedCapabilities",
          "description": "List of supported capabilities for the image from which the OS disk was created."
        },
        "supportsHibernation": {
          "type": "boolean",
          "description": "Indicates the OS on a disk supports hibernation."
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of restorePoint creation",
          "readOnly": true
        }
      }
    },
    "diskSecurityProfile": {
      "description": "Contains the security related information for the resource.",
      "properties": {
        "secureVMDiskEncryptionSetId": {
          "type": "string",
          "description": "ResourceId of the disk encryption set associated to Confidential VM supported disk encrypted with customer managed key"
        },
        "securityType": {
          "$ref": "#/definitions/DiskSecurityType"
        }
      }
    },
    "diskSecurityType": {
      "type": "string",
      "description": "Specifies the SecurityType of the VM. Applicable for OS disks only.",
      "enum": [
        "ConfidentialVM_DiskEncryptedWithCustomerKey",
        "ConfidentialVM_DiskEncryptedWithPlatformKey",
        "ConfidentialVM_NonPersistedTPM",
        "ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey",
        "TrustedLaunch"
      ],
      "x-ms-enum": {
        "name": "DiskSecurityTypes",
        "modelAsString": true,
        "values": [
          {
            "value": "TrustedLaunch",
            "description": "Trusted Launch provides security features such as secure boot and virtual Trusted Platform Module (vTPM)"
          },
          {
            "value": "ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey",
            "description": "Indicates Confidential VM disk with only VM guest state encrypted"
          },
          {
            "value": "ConfidentialVM_DiskEncryptedWithPlatformKey",
            "description": "Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a platform managed key"
          },
          {
            "value": "ConfidentialVM_DiskEncryptedWithCustomerKey",
            "description": "Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a customer managed key"
          },
          {
            "value": "ConfidentialVM_NonPersistedTPM",
            "description": "Indicates Confidential VM disk with a ephemeral vTPM. vTPM state is not persisted across VM reboots."
          }
        ]
      }
    },
    "diskSku": {
      "description": "The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, StandardSSD_ZRS, or PremiumV2_LRS.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name.",
          "enum": [
            "PremiumV2_LRS",
            "Premium_LRS",
            "Premium_ZRS",
            "StandardSSD_LRS",
            "StandardSSD_ZRS",
            "Standard_LRS",
            "UltraSSD_LRS"
          ],
          "x-ms-enum": {
            "name": "DiskStorageAccountTypes",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard_LRS",
                "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
              },
              {
                "value": "Premium_LRS",
                "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
              },
              {
                "value": "StandardSSD_LRS",
                "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
              },
              {
                "value": "UltraSSD_LRS",
                "description": "Ultra SSD locally redundant storage. Best for IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other transaction-heavy workloads."
              },
              {
                "value": "Premium_ZRS",
                "description": "Premium SSD zone redundant storage. Best for the production workloads that need storage resiliency against zone failures."
              },
              {
                "value": "StandardSSD_ZRS",
                "description": "Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that need storage resiliency against zone failures."
              },
              {
                "value": "PremiumV2_LRS",
                "description": "Premium SSD v2 locally redundant storage. Best for production and performance-sensitive workloads that consistently require low latency and high IOPS and throughput."
              }
            ]
          }
        },
        "tier": {
          "type": "string",
          "description": "The sku tier.",
          "readOnly": true
        }
      }
    },
    "diskState": {
      "type": "string",
      "description": "This enumerates the possible state of the disk.",
      "enum": [
        "ActiveSAS",
        "ActiveSASFrozen",
        "ActiveUpload",
        "Attached",
        "Frozen",
        "ReadyToUpload",
        "Reserved",
        "Unattached"
      ],
      "x-ms-enum": {
        "name": "DiskState",
        "modelAsString": true,
        "values": [
          {
            "value": "Unattached",
            "description": "The disk is not being used and can be attached to a VM."
          },
          {
            "value": "Attached",
            "description": "The disk is currently attached to a running VM."
          },
          {
            "value": "Reserved",
            "description": "The disk is attached to a stopped-deallocated VM."
          },
          {
            "value": "Frozen",
            "description": "The disk is attached to a VM which is in hibernated state."
          },
          {
            "value": "ActiveSAS",
            "description": "The disk currently has an Active SAS Uri associated with it."
          },
          {
            "value": "ActiveSASFrozen",
            "description": "The disk is attached to a VM in hibernated state and has an active SAS URI associated with it."
          },
          {
            "value": "ReadyToUpload",
            "description": "A disk is ready to be created by upload by requesting a write token."
          },
          {
            "value": "ActiveUpload",
            "description": "A disk is created for upload and a write token has been issued for uploading to it."
          }
        ]
      },
      "readOnly": true
    },
    "diskUpdate": {
      "description": "Disk update resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiskUpdateProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/DiskSku"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "diskUpdateProperties": {
      "description": "Disk resource update properties.",
      "properties": {
        "burstingEnabled": {
          "type": "boolean",
          "description": "Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks."
        },
        "dataAccessAuthMode": {
          "$ref": "./diskRPCommon.json#/definitions/DataAccessAuthMode"
        },
        "diskAccessId": {
          "type": "string",
          "description": "ARM id of the DiskAccess resource for using private endpoints on disks."
        },
        "diskIOPSReadOnly": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes."
        },
        "diskIOPSReadWrite": {
          "type": "integer",
          "format": "int64",
          "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes."
        },
        "diskMBpsReadOnly": {
          "type": "integer",
          "format": "int64",
          "description": "The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."
        },
        "diskMBpsReadWrite": {
          "type": "integer",
          "format": "int64",
          "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size."
        },
        "encryption": {
          "$ref": "./diskRPCommon.json#/definitions/Encryption",
          "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys."
        },
        "encryptionSettingsCollection": {
          "$ref": "./diskRPCommon.json#/definitions/EncryptionSettingsCollection",
          "description": "Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot."
        },
        "maxShares": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time."
        },
        "networkAccessPolicy": {
          "$ref": "./diskRPCommon.json#/definitions/NetworkAccessPolicy"
        },
        "optimizedForFrequentAttach": {
          "type": "boolean",
          "description": "Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine."
        },
        "osType": {
          "type": "string",
          "description": "the Operating System type.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          }
        },
        "propertyUpdatesInProgress": {
          "$ref": "#/definitions/PropertyUpdatesInProgress",
          "description": "Properties of the disk for which update is pending.",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "./diskRPCommon.json#/definitions/PublicNetworkAccess"
        },
        "purchasePlan": {
          "$ref": "./diskRPCommon.json#/definitions/PurchasePlan",
          "description": "Purchase plan information to be added on the OS disk"
        },
        "supportedCapabilities": {
          "$ref": "./diskRPCommon.json#/definitions/SupportedCapabilities",
          "description": "List of supported capabilities to be added on the OS disk."
        },
        "supportsHibernation": {
          "type": "boolean",
          "description": "Indicates the OS on a disk supports hibernation."
        },
        "tier": {
          "type": "string",
          "description": "Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks."
        }
      }
    },
    "encryption": {
      "description": "Encryption at rest settings for disk or snapshot",
      "properties": {
        "diskEncryptionSetId": {
          "type": "string",
          "description": "ResourceId of the disk encryption set to use for enabling encryption at rest."
        },
        "type": {
          "$ref": "#/definitions/EncryptionType"
        }
      }
    },
    "encryptionSetIdentity": {
      "description": "The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.",
          "enum": [
            "None",
            "SystemAssigned",
            "SystemAssigned, UserAssigned",
            "UserAssigned"
          ],
          "x-ms-enum": {
            "name": "DiskEncryptionSetIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentities": {
          "$ref": "../../../common-types/v1/common.json#/definitions/UserAssignedIdentities",
          "description": "The list of user identities associated with the disk encryption set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      }
    },
    "encryptionSetProperties": {
      "properties": {
        "activeKey": {
          "$ref": "#/definitions/KeyForDiskEncryptionSet",
          "description": "The key vault key which is currently used by this disk encryption set."
        },
        "autoKeyRotationError": {
          "$ref": "../../../common-types/v1/common.json#/definitions/ApiError",
          "description": "The error that was encountered during auto-key rotation. If an error is present, then auto-key rotation will not be attempted until the error on this disk encryption set is fixed.",
          "readOnly": true
        },
        "encryptionType": {
          "$ref": "#/definitions/DiskEncryptionSetType"
        },
        "federatedClientId": {
          "type": "string",
          "description": "Multi-tenant application client id to access key vault in a different tenant. Setting the value to 'None' will clear the property."
        },
        "lastKeyRotationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the active key of this disk encryption set was updated.",
          "readOnly": true
        },
        "previousKeys": {
          "type": "array",
          "description": "A readonly collection of key vault keys previously used by this disk encryption set while a key rotation is in progress. It will be empty if there is no ongoing key rotation.",
          "items": {
            "$ref": "#/definitions/KeyForDiskEncryptionSet"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "sourceVault/id"
          ]
        },
        "provisioningState": {
          "type": "string",
          "description": "The disk encryption set provisioning state.",
          "readOnly": true
        },
        "rotationToLatestKeyVersionEnabled": {
          "type": "boolean",
          "description": "Set this flag to true to enable auto-updating of this disk encryption set to the latest key version."
        }
      }
    },
    "encryptionSettingsCollection": {
      "description": "Encryption settings for disk or snapshot",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged."
        },
        "encryptionSettings": {
          "type": "array",
          "description": "A collection of encryption settings, one for each disk volume.",
          "items": {
            "$ref": "#/definitions/EncryptionSettingsElement"
          },
          "x-ms-identifiers": [
            "diskEncryptionKey/sourceVault/id"
          ]
        },
        "encryptionSettingsVersion": {
          "type": "string",
          "description": "Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption."
        }
      },
      "required": [
        "enabled"
      ]
    },
    "encryptionSettingsElement": {
      "description": "Encryption settings for one disk volume.",
      "properties": {
        "diskEncryptionKey": {
          "$ref": "#/definitions/KeyVaultAndSecretReference",
          "description": "Key Vault Secret Url and vault id of the disk encryption key"
        },
        "keyEncryptionKey": {
          "$ref": "#/definitions/KeyVaultAndKeyReference",
          "description": "Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key."
        }
      }
    },
    "encryptionType": {
      "type": "string",
      "description": "The type of key used to encrypt the data of the disk.",
      "enum": [
        "EncryptionAtRestWithCustomerKey",
        "EncryptionAtRestWithPlatformAndCustomerKeys",
        "EncryptionAtRestWithPlatformKey"
      ],
      "x-ms-enum": {
        "name": "EncryptionType",
        "modelAsString": true,
        "values": [
          {
            "value": "EncryptionAtRestWithPlatformKey",
            "description": "Disk is encrypted at rest with Platform managed key. It is the default encryption type. This is not a valid encryption type for disk encryption sets."
          },
          {
            "value": "EncryptionAtRestWithCustomerKey",
            "description": "Disk is encrypted at rest with Customer managed key that can be changed and revoked by a customer."
          },
          {
            "value": "EncryptionAtRestWithPlatformAndCustomerKeys",
            "description": "Disk is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed."
          }
        ]
      }
    },
    "grantAccessData": {
      "description": "Data used for requesting a SAS.",
      "properties": {
        "access": {
          "type": "string",
          "enum": [
            "None",
            "Read",
            "Write"
          ],
          "x-ms-enum": {
            "name": "AccessLevel",
            "modelAsString": true
          }
        },
        "durationInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Time duration in seconds until the SAS access expires."
        },
        "fileFormat": {
          "type": "string",
          "description": "Used to specify the file format when making request for SAS on a VHDX file format snapshot",
          "enum": [
            "VHD",
            "VHDX"
          ],
          "x-ms-enum": {
            "name": "FileFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "VHD",
                "description": "A VHD file is a disk image file in the Virtual Hard Disk file format."
              },
              {
                "value": "VHDX",
                "description": "A VHDX file is a disk image file in the Virtual Hard Disk v2 file format."
              }
            ]
          }
        },
        "getSecureVMGuestStateSAS": {
          "type": "boolean",
          "description": "Set this flag to true to get additional SAS for VM guest state"
        }
      },
      "required": [
        "access",
        "durationInSeconds"
      ]
    },
    "imageDiskReference": {
      "description": "The source image used for creating the disk.",
      "properties": {
        "communityGalleryImageId": {
          "type": "string",
          "description": "A relative uri containing a community Azure Compute Gallery image reference."
        },
        "id": {
          "type": "string",
          "description": "A relative uri containing either a Platform Image Repository, user image, or Azure Compute Gallery image reference."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null."
        },
        "sharedGalleryImageId": {
          "type": "string",
          "description": "A relative uri containing a direct shared Azure Compute Gallery image reference."
        }
      }
    },
    "keyForDiskEncryptionSet": {
      "description": "Key Vault Key Url to be used for server side encryption of Managed Disks and Snapshots",
      "properties": {
        "keyUrl": {
          "type": "string",
          "description": "Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required regardless of rotationToLatestKeyVersionEnabled value."
        },
        "sourceVault": {
          "$ref": "./diskRPCommon.json#/definitions/SourceVault",
          "description": "Resource id of the KeyVault containing the key or secret. This property is optional and cannot be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription."
        }
      },
      "required": [
        "keyUrl"
      ]
    },
    "keyVaultAndKeyReference": {
      "description": "Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey",
      "properties": {
        "keyUrl": {
          "type": "string",
          "description": "Url pointing to a key or secret in KeyVault"
        },
        "sourceVault": {
          "$ref": "#/definitions/SourceVault",
          "description": "Resource id of the KeyVault containing the key or secret"
        }
      },
      "required": [
        "keyUrl",
        "sourceVault"
      ]
    },
    "keyVaultAndSecretReference": {
      "description": "Key Vault Secret Url and vault id of the encryption key ",
      "properties": {
        "secretUrl": {
          "type": "string",
          "description": "Url pointing to a key or secret in KeyVault"
        },
        "sourceVault": {
          "$ref": "#/definitions/SourceVault",
          "description": "Resource id of the KeyVault containing the key or secret"
        }
      },
      "required": [
        "secretUrl",
        "sourceVault"
      ]
    },
    "networkAccessPolicy": {
      "type": "string",
      "description": "Policy for accessing the disk via network.",
      "enum": [
        "AllowAll",
        "AllowPrivate",
        "DenyAll"
      ],
      "x-ms-enum": {
        "name": "NetworkAccessPolicy",
        "modelAsString": true,
        "values": [
          {
            "value": "AllowAll",
            "description": "The disk can be exported or uploaded to from any network."
          },
          {
            "value": "AllowPrivate",
            "description": "The disk can be exported or uploaded to using a DiskAccess resource's private endpoints."
          },
          {
            "value": "DenyAll",
            "description": "The disk cannot be exported."
          }
        ]
      }
    },
    "privateEndpoint": {
      "description": "The Private Endpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint",
          "readOnly": true
        }
      }
    },
    "privateEndpointConnection": {
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "private endpoint connection Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "private endpoint connection name",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        },
        "type": {
          "type": "string",
          "description": "private endpoint connection type",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "privateEndpointConnectionListResult": {
      "description": "A list of private link resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page of snapshots."
        },
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "privateEndpointConnectionProperties": {
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point.",
          "readOnly": true
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between DiskAccess and Virtual Network."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "privateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Creating",
        "Deleting",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "privateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Approved",
        "Pending",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "privateLinkResource": {
      "description": "A private link resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "private link resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "private link resource name",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        },
        "type": {
          "type": "string",
          "description": "private link resource type",
          "readOnly": true
        }
      }
    },
    "privateLinkResourceListResult": {
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "privateLinkResourceProperties": {
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "privateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      }
    },
    "propertyUpdatesInProgress": {
      "description": "Properties of the disk for which update is pending.",
      "properties": {
        "targetTier": {
          "type": "string",
          "description": "The target performance tier of the disk if a tier change operation is in progress."
        }
      }
    },
    "proxyOnlyResource": {
      "description": "The ProxyOnly Resource model definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        }
      }
    },
    "publicNetworkAccess": {
      "type": "string",
      "description": "Policy for controlling export on the disk.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled",
            "description": "You can generate a SAS URI to access the underlying data of the disk publicly on the internet when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate."
          },
          {
            "value": "Disabled",
            "description": "You cannot access the underlying data of the disk publicly on the internet even when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate."
          }
        ]
      }
    },
    "purchasePlan": {
      "description": "Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan ID."
        },
        "product": {
          "type": "string",
          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
        },
        "promotionCode": {
          "type": "string",
          "description": "The Offer Promotion Code."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher ID."
        }
      },
      "required": [
        "name",
        "product",
        "publisher"
      ]
    },
    "resourceUriList": {
      "description": "The List resources which are encrypted with the disk encryption set.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of encrypted resources. Call ListNext() with this to fetch the next page of encrypted resources."
        },
        "value": {
          "type": "array",
          "description": "A list of IDs or Owner IDs of resources which are encrypted with the disk encryption set.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "shareInfoElement": {
      "properties": {
        "vmUri": {
          "type": "string",
          "description": "A relative URI containing the ID of the VM that has the disk attached.",
          "readOnly": true
        }
      }
    },
    "snapshot": {
      "description": "Snapshot resource.",
      "properties": {
        "extendedLocation": {
          "$ref": "../../../common-types/v1/common.json#/definitions/ExtendedLocation",
          "description": "The extended location where the snapshot will be created. Extended location cannot be changed."
        },
        "managedBy": {
          "type": "string",
          "description": "Unused. Always Null.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/SnapshotProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/SnapshotSku"
        }
      },
      "allOf": [
        {
          "$ref": "../../../common-types/v1/common.json#/definitions/Resource"
        }
      ]
    },
    "snapshotList": {
      "description": "The List Snapshots operation response.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page of snapshots."
        },
        "value": {
          "type": "array",
          "description": "A list of snapshots.",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "snapshotProperties": {
      "description": "Snapshot resource properties.",
      "properties": {
        "completionPercent": {
          "type": "number",
          "description": "Percentage complete for the background copy when a resource is created via the CopyStart operation."
        },
        "copyCompletionError": {
          "$ref": "./diskRPCommon.json#/definitions/CopyCompletionError",
          "description": "Indicates the error details if the background copy of a resource created via the CopyStart operation fails."
        },
        "creationData": {
          "$ref": "./diskRPCommon.json#/definitions/CreationData",
          "description": "Disk source information. CreationData information cannot be changed after the disk has been created."
        },
        "dataAccessAuthMode": {
          "$ref": "./diskRPCommon.json#/definitions/DataAccessAuthMode"
        },
        "diskAccessId": {
          "type": "string",
          "description": "ARM id of the DiskAccess resource for using private endpoints on disks."
        },
        "diskSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the disk in bytes. This field is read only.",
          "readOnly": true
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size."
        },
        "diskState": {
          "$ref": "./diskRPCommon.json#/definitions/DiskState",
          "description": "The state of the snapshot."
        },
        "encryption": {
          "$ref": "./diskRPCommon.json#/definitions/Encryption",
          "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys."
        },
        "encryptionSettingsCollection": {
          "$ref": "./diskRPCommon.json#/definitions/EncryptionSettingsCollection",
          "description": "Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot."
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
          "enum": [
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "HyperVGeneration",
            "modelAsString": true
          }
        },
        "incremental": {
          "type": "boolean",
          "description": "Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed."
        },
        "incrementalSnapshotFamilyId": {
          "type": "string",
          "description": "Incremental snapshots for a disk share an incremental snapshot family id. The Get Page Range Diff API can only be called on incremental snapshots with the same family id.",
          "readOnly": true
        },
        "networkAccessPolicy": {
          "$ref": "./diskRPCommon.json#/definitions/NetworkAccessPolicy"
        },
        "osType": {
          "type": "string",
          "description": "The Operating System type.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The disk provisioning state.",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "./diskRPCommon.json#/definitions/PublicNetworkAccess"
        },
        "purchasePlan": {
          "$ref": "./diskRPCommon.json#/definitions/PurchasePlan",
          "description": "Purchase plan information for the image from which the source disk for the snapshot was originally created."
        },
        "securityProfile": {
          "$ref": "./diskRPCommon.json#/definitions/DiskSecurityProfile",
          "description": "Contains the security related information for the resource."
        },
        "supportedCapabilities": {
          "$ref": "./diskRPCommon.json#/definitions/SupportedCapabilities",
          "description": "List of supported capabilities for the image from which the source disk from the snapshot was originally created."
        },
        "supportsHibernation": {
          "type": "boolean",
          "description": "Indicates the OS on a snapshot supports hibernation."
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the snapshot was created.",
          "readOnly": true
        },
        "uniqueId": {
          "type": "string",
          "description": "Unique Guid identifying the resource.",
          "readOnly": true
        }
      },
      "required": [
        "creationData"
      ]
    },
    "snapshotSku": {
      "description": "The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot",
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name.",
          "enum": [
            "Premium_LRS",
            "Standard_LRS",
            "Standard_ZRS"
          ],
          "x-ms-enum": {
            "name": "SnapshotStorageAccountTypes",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard_LRS",
                "description": "Standard HDD locally redundant storage"
              },
              {
                "value": "Premium_LRS",
                "description": "Premium SSD locally redundant storage"
              },
              {
                "value": "Standard_ZRS",
                "description": "Standard zone redundant storage"
              }
            ]
          }
        },
        "tier": {
          "type": "string",
          "description": "The sku tier.",
          "readOnly": true
        }
      }
    },
    "snapshotUpdate": {
      "description": "Snapshot update resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SnapshotUpdateProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/SnapshotSku"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "snapshotUpdateProperties": {
      "description": "Snapshot resource update properties.",
      "properties": {
        "dataAccessAuthMode": {
          "$ref": "./diskRPCommon.json#/definitions/DataAccessAuthMode"
        },
        "diskAccessId": {
          "type": "string",
          "description": "ARM id of the DiskAccess resource for using private endpoints on disks."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size."
        },
        "encryption": {
          "$ref": "./diskRPCommon.json#/definitions/Encryption",
          "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys."
        },
        "encryptionSettingsCollection": {
          "$ref": "./diskRPCommon.json#/definitions/EncryptionSettingsCollection",
          "description": "Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot."
        },
        "networkAccessPolicy": {
          "$ref": "./diskRPCommon.json#/definitions/NetworkAccessPolicy"
        },
        "osType": {
          "type": "string",
          "description": "the Operating System type.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          }
        },
        "publicNetworkAccess": {
          "$ref": "./diskRPCommon.json#/definitions/PublicNetworkAccess"
        },
        "supportedCapabilities": {
          "$ref": "./diskRPCommon.json#/definitions/SupportedCapabilities",
          "description": "List of supported capabilities for the image from which the OS disk was created."
        },
        "supportsHibernation": {
          "type": "boolean",
          "description": "Indicates the OS on a snapshot supports hibernation."
        }
      }
    },
    "sourceVault": {
      "description": "The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        }
      }
    },
    "supportedCapabilities": {
      "type": "object",
      "description": "List of supported capabilities persisted on the disk resource for VM use.",
      "properties": {
        "acceleratedNetwork": {
          "type": "boolean",
          "description": "True if the image from which the OS disk is created supports accelerated networking."
        },
        "architecture": {
          "type": "string",
          "description": "CPU architecture supported by an OS disk.",
          "enum": [
            "Arm64",
            "x64"
          ],
          "x-ms-enum": {
            "name": "Architecture",
            "modelAsString": true
          }
        },
        "diskControllerTypes": {
          "type": "string",
          "description": "The disk controllers that an OS disk supports. If set it can be SCSI or SCSI, NVME or NVME, SCSI."
        }
      }
    }
  },
  "parameters": {
    "diskAccessNameParameter": {
      "name": "diskAccessName",
      "in": "path",
      "description": "The name of the disk access resource that is being created. The name can't be changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "diskEncryptionSetNameParameter": {
      "name": "diskEncryptionSetName",
      "in": "path",
      "description": "The name of the disk encryption set that is being created. The name can't be changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "diskNameParameter": {
      "name": "diskName",
      "in": "path",
      "description": "The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "diskRestorePointNameParameter": {
      "name": "diskRestorePointName",
      "in": "path",
      "description": "The name of the disk restore point created.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "privateEndpointConnectionNameParameter": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "description": "The name of the private endpoint connection.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "restorePointCollectionNameParameter": {
      "name": "restorePointCollectionName",
      "in": "path",
      "description": "The name of the restore point collection that the disk restore point belongs.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "snapshotNameParameter": {
      "name": "snapshotName",
      "in": "path",
      "description": "The name of the snapshot that is being created. The name can't be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name length is 80 characters.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "vmRestorePointNameParameter": {
      "name": "vmRestorePointName",
      "in": "path",
      "description": "The name of the vm restore point that the disk disk restore point belongs.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}