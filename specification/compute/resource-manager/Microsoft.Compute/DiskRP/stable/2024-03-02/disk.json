{
  "swagger": "2.0",
  "info": {
    "title": "DiskResourceProviderClient",
    "version": "2024-03-02",
    "description": "The Disk Resource Provider Client."
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks": {
      "get": {
        "operationId": "Disks_List",
        "tags": [
          "Disks"
        ],
        "description": "Lists all the disks under a subscription.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskList"
            }
          }
        },
        "x-ms-examples": {
          "List all managed disks in a subscription.": {
            "$ref": "./examples/diskExamples/Disk_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks": {
      "get": {
        "operationId": "Disks_ListByResourceGroup",
        "tags": [
          "Disks"
        ],
        "description": "Lists all the disks under a resource group.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskList"
            }
          }
        },
        "x-ms-examples": {
          "List all managed disks in a resource group.": {
            "$ref": "./examples/diskExamples/Disk_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}": {
      "get": {
        "operationId": "Disks_Get",
        "tags": [
          "Disks"
        ],
        "description": "Gets information about a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        },
        "x-ms-examples": {
          "Get information about a managed disk.": {
            "$ref": "./examples/diskExamples/Disk_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Disks_CreateOrUpdate",
        "tags": [
          "Disks"
        ],
        "description": "Creates or updates a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "disk",
            "in": "body",
            "description": "Disk object supplied in the body of the Put disk operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        },
        "x-ms-examples": {
          "Create a confidential VM supported disk encrypted with customer managed key": {
            "$ref": "./examples/diskExamples/Disk_Create_ConfidentialVMSupportedDiskEncryptedWithCMK.json"
          },
          "Create a managed disk and associate with disk access resource.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithDiskAccess.json"
          },
          "Create a managed disk and associate with disk encryption set.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithDiskEncryptionSet.json"
          },
          "Create a managed disk by copying a snapshot.": {
            "$ref": "./examples/diskExamples/Disk_Create_ByCopyingASnapshot.json"
          },
          "Create a managed disk by importing an unmanaged blob from a different subscription.": {
            "$ref": "./examples/diskExamples/Disk_Create_ByImportingBlobFromADifferentSubscription.json"
          },
          "Create a managed disk by importing an unmanaged blob from the same subscription.": {
            "$ref": "./examples/diskExamples/Disk_Create_ByImportingBlobFromTheSameSubscription.json"
          },
          "Create a managed disk from ImportSecure create option": {
            "$ref": "./examples/diskExamples/Disk_Create_FromImportSecure.json"
          },
          "Create a managed disk from UploadPreparedSecure create option": {
            "$ref": "./examples/diskExamples/Disk_Create_FromUploadPreparedSecure.json"
          },
          "Create a managed disk from a platform image.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAPlatformImage.json"
          },
          "Create a managed disk from an Azure Compute Gallery community image.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnAzureComputeGalleryCommunityImage.json"
          },
          "Create a managed disk from an Azure Compute Gallery direct shared image.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnAzureComputeGalleryDirectSharedImage.json"
          },
          "Create a managed disk from an Azure Compute Gallery image.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnAzureComputeGalleryImage.json"
          },
          "Create a managed disk from an existing managed disk in the same or different subscription.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnExistingManagedDisk.json"
          },
          "Create a managed disk from elastic san volume snapshot.": {
            "$ref": "./examples/diskExamples/Disk_Create_FromAnElasticSanVolumeSnapshot.json"
          },
          "Create a managed disk with dataAccessAuthMode": {
            "$ref": "./examples/diskExamples/Disk_Create_WithDataAccessAuthMode.json"
          },
          "Create a managed disk with optimizedForFrequentAttach.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithOptimizedForFrequentAttach.json"
          },
          "Create a managed disk with performancePlus.": {
            "$ref": "./examples/diskExamples/Disk_Create_PerformancePlus.json"
          },
          "Create a managed disk with premium v2 account type.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithPremiumV2_LRSAccountType.json"
          },
          "Create a managed disk with security profile": {
            "$ref": "./examples/diskExamples/Disk_Create_WithSecurityProfile.json"
          },
          "Create a managed disk with ssd zrs account type.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithSSDZRSAccountType.json"
          },
          "Create a managed disk with ultra account type with readOnly property set.": {
            "$ref": "./examples/diskExamples/Disk_Create_WithUltraSSD_ReadOnly.json"
          },
          "Create a managed upload disk.": {
            "$ref": "./examples/diskExamples/Disk_Create_UploadDisk.json"
          },
          "Create an empty managed disk in extended location.": {
            "$ref": "./examples/diskExamples/Disk_Create_InExtendedLocation.json"
          },
          "Create an empty managed disk.": {
            "$ref": "./examples/diskExamples/Disk_Create_Empty.json"
          },
          "Create an ultra managed disk with logicalSectorSize 512E": {
            "$ref": "./examples/diskExamples/Disk_Create_WithLogicalSectorSize.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Disks_Update",
        "tags": [
          "Disks"
        ],
        "description": "Updates (patches) a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "disk",
            "in": "body",
            "description": "Disk object supplied in the body of the Patch disk operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiskUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a bursting enabled managed disk.": {
            "$ref": "./examples/diskExamples/Disk_CreateOrUpdate_BurstingEnabled.json"
          },
          "Update a managed disk to add accelerated networking.": {
            "$ref": "./examples/diskExamples/Disk_Update_AddAcceleratedNetworking.json"
          },
          "Update a managed disk to add architecture.": {
            "$ref": "./examples/diskExamples//Disk_Update_ToAddArchitecture.json"
          },
          "Update a managed disk to add purchase plan.": {
            "$ref": "./examples/diskExamples/Disk_Update_AddPurchasePlan.json"
          },
          "Update a managed disk to add supportsHibernation.": {
            "$ref": "./examples/diskExamples/Disk_Update_AddSupportsHibernation.json"
          },
          "Update a managed disk to change tier.": {
            "$ref": "./examples/diskExamples/Disk_Update_ChangeTier.json"
          },
          "Update a managed disk to disable bursting.": {
            "$ref": "./examples/diskExamples/Disk_Update_DisableBursting.json"
          },
          "Update a managed disk to disable optimizedForFrequentAttach.": {
            "$ref": "./examples/diskExamples//Disk_Update_DisableOptimizedForFrequentAttach.json"
          },
          "Update a managed disk with diskControllerTypes.": {
            "$ref": "./examples/diskExamples//Disk_Update_AddDiskControllerTypes.json"
          },
          "Update managed disk to remove disk access resource association.": {
            "$ref": "./examples/diskExamples/Disk_Update_RemoveDiskAccess.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Disks_Delete",
        "tags": [
          "Disks"
        ],
        "description": "Deletes a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "If the disk is deleted, this is an expected error code."
          }
        },
        "x-ms-examples": {
          "Delete a managed disk.": {
            "$ref": "./examples/diskExamples/Disk_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess": {
      "post": {
        "operationId": "Disks_GrantAccess",
        "tags": [
          "Disks"
        ],
        "description": "Grants access to a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "grantAccessData",
            "in": "body",
            "description": "Access data object supplied in the body of the get disk access operation.",
            "required": true,
            "schema": {
              "$ref": "./diskRPCommon.json#/definitions/GrantAccessData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./diskRPCommon.json#/definitions/AccessUri"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-examples": {
          "Get a sas on a managed disk.": {
            "$ref": "./examples/diskExamples/Disk_BeginGetAccess.json"
          },
          "Get sas on managed disk and VM guest state": {
            "$ref": "./examples/diskExamples/Disk_BeginGetAccess_WithVMGuestState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess": {
      "post": {
        "operationId": "Disks_RevokeAccess",
        "tags": [
          "Disks"
        ],
        "description": "Revokes access to a disk.",
        "parameters": [
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./diskRPCommon.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-examples": {
          "Revoke access to a managed disk.": {
            "$ref": "./examples/diskExamples/Disk_EndGetAccess.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Disk": {
      "description": "Disk resource.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "A relative URI containing the ID of the VM that has the disk attached.",
          "readOnly": true
        },
        "managedByExtended": {
          "type": "array",
          "description": "List of relative URIs containing the IDs of the VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/DiskSku"
        },
        "zones": {
          "type": "array",
          "description": "The Logical zone list for Disk.",
          "items": {
            "type": "string"
          }
        },
        "extendedLocation": {
          "$ref": "../../../common-types/v1/common.json#/definitions/ExtendedLocation",
          "description": "The extended location where the disk will be created. Extended location cannot be changed."
        },
        "properties": {
          "$ref": "#/definitions/DiskProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common-types/v1/common.json#/definitions/Resource"
        }
      ]
    },
    "DiskList": {
      "description": "The List Disks operation response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A list of disks.",
          "items": {
            "$ref": "#/definitions/Disk"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of disks."
        }
      },
      "required": [
        "value"
      ]
    },
    "DiskProperties": {
      "description": "Disk resource properties.",
      "properties": {
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the disk was created.",
          "readOnly": true
        },
        "osType": {
          "type": "string",
          "description": "The Operating System type.",
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          }
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
          "enum": [
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "HyperVGeneration",
            "modelAsString": true
          }
        },
        "purchasePlan": {
          "$ref": "./diskRPCommon.json#/definitions/PurchasePlan",
          "description": "Purchase plan information for the the image from which the OS disk was created. E.g. - {name: 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}"
        },
        "supportedCapabilities": {
          "$ref": "./diskRPCommon.json#/definitions/SupportedCapabilities",
          "description": "List of supported capabilities for the image from which the OS disk was created."
        },
        "creationData": {
          "$ref": "./diskRPCommon.json#/definitions/CreationData",
          "description": "Disk source information. CreationData information cannot be changed after the disk has been created."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size."
        },
        "diskSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the disk in bytes. This field is read only.",
          "readOnly": true
        },
        "uniqueId": {
          "type": "string",
          "description": "Unique Guid identifying the resource.",
          "readOnly": true
        },
        "encryptionSettingsCollection": {
          "$ref": "./diskRPCommon.json#/definitions/EncryptionSettingsCollection",
          "description": "Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot."
        },
        "provisioningState": {
          "type": "string",
          "description": "The disk provisioning state.",
          "readOnly": true
        },
        "diskIOPSReadWrite": {
          "type": "integer",
          "format": "int64",
          "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes."
        },
        "diskMBpsReadWrite": {
          "type": "integer",
          "format": "int64",
          "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."
        },
        "diskIOPSReadOnly": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes."
        },
        "diskMBpsReadOnly": {
          "type": "integer",
          "format": "int64",
          "description": "The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."
        },
        "diskState": {
          "$ref": "./diskRPCommon.json#/definitions/DiskState",
          "description": "The state of the disk."
        },
        "encryption": {
          "$ref": "./diskRPCommon.json#/definitions/Encryption",
          "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys."
        },
        "maxShares": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time."
        },
        "shareInfo": {
          "type": "array",
          "description": "Details of the list of all VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.",
          "items": {
            "$ref": "#/definitions/ShareInfoElement"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "vmUri"
          ]
        },
        "networkAccessPolicy": {
          "$ref": "./diskRPCommon.json#/definitions/NetworkAccessPolicy"
        },
        "diskAccessId": {
          "type": "string",
          "description": "ARM id of the DiskAccess resource for using private endpoints on disks."
        },
        "burstingEnabledTime": {
          "type": "string",
          "format": "date-time",
          "description": "Latest time when bursting was last enabled on a disk.",
          "readOnly": true
        },
        "tier": {
          "type": "string",
          "description": "Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks."
        },
        "burstingEnabled": {
          "type": "boolean",
          "description": "Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks."
        },
        "propertyUpdatesInProgress": {
          "$ref": "#/definitions/PropertyUpdatesInProgress",
          "description": "Properties of the disk for which update is pending.",
          "readOnly": true
        },
        "supportsHibernation": {
          "type": "boolean",
          "description": "Indicates the OS on a disk supports hibernation."
        },
        "securityProfile": {
          "$ref": "./diskRPCommon.json#/definitions/DiskSecurityProfile",
          "description": "Contains the security related information for the resource."
        },
        "completionPercent": {
          "type": "number",
          "description": "Percentage complete for the background copy when a resource is created via the CopyStart operation."
        },
        "publicNetworkAccess": {
          "$ref": "./diskRPCommon.json#/definitions/PublicNetworkAccess"
        },
        "dataAccessAuthMode": {
          "$ref": "./diskRPCommon.json#/definitions/DataAccessAuthMode"
        },
        "optimizedForFrequentAttach": {
          "type": "boolean",
          "description": "Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine."
        },
        "LastOwnershipUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time when the ownership state of the disk was last changed i.e., the time the disk was last attached or detached from a VM or the time when the VM to which the disk was attached was deallocated or started.",
          "readOnly": true
        }
      },
      "required": [
        "creationData"
      ]
    },
    "DiskSku": {
      "description": "The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, StandardSSD_ZRS, or PremiumV2_LRS.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name.",
          "enum": [
            "Standard_LRS",
            "Premium_LRS",
            "StandardSSD_LRS",
            "UltraSSD_LRS",
            "Premium_ZRS",
            "StandardSSD_ZRS",
            "PremiumV2_LRS"
          ],
          "x-ms-enum": {
            "name": "DiskStorageAccountTypes",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard_LRS",
                "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
              },
              {
                "value": "Premium_LRS",
                "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
              },
              {
                "value": "StandardSSD_LRS",
                "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
              },
              {
                "value": "UltraSSD_LRS",
                "description": "Ultra SSD locally redundant storage. Best for IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other transaction-heavy workloads."
              },
              {
                "value": "Premium_ZRS",
                "description": "Premium SSD zone redundant storage. Best for the production workloads that need storage resiliency against zone failures."
              },
              {
                "value": "StandardSSD_ZRS",
                "description": "Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that need storage resiliency against zone failures."
              },
              {
                "value": "PremiumV2_LRS",
                "description": "Premium SSD v2 locally redundant storage. Best for production and performance-sensitive workloads that consistently require low latency and high IOPS and throughput."
              }
            ]
          }
        },
        "tier": {
          "type": "string",
          "description": "The sku tier.",
          "readOnly": true
        }
      }
    },
    "DiskUpdate": {
      "description": "Disk update resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiskUpdateProperties",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/DiskSku"
        }
      }
    },
    "DiskUpdateProperties": {
      "description": "Disk resource update properties.",
      "properties": {
        "osType": {
          "type": "string",
          "description": "the Operating System type.",
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          }
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size."
        },
        "encryptionSettingsCollection": {
          "$ref": "./diskRPCommon.json#/definitions/EncryptionSettingsCollection",
          "description": "Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot."
        },
        "diskIOPSReadWrite": {
          "type": "integer",
          "format": "int64",
          "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes."
        },
        "diskMBpsReadWrite": {
          "type": "integer",
          "format": "int64",
          "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."
        },
        "diskIOPSReadOnly": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes."
        },
        "diskMBpsReadOnly": {
          "type": "integer",
          "format": "int64",
          "description": "The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10."
        },
        "maxShares": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time."
        },
        "encryption": {
          "$ref": "./diskRPCommon.json#/definitions/Encryption",
          "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys."
        },
        "networkAccessPolicy": {
          "$ref": "./diskRPCommon.json#/definitions/NetworkAccessPolicy"
        },
        "diskAccessId": {
          "type": "string",
          "description": "ARM id of the DiskAccess resource for using private endpoints on disks."
        },
        "tier": {
          "type": "string",
          "description": "Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks."
        },
        "burstingEnabled": {
          "type": "boolean",
          "description": "Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks."
        },
        "purchasePlan": {
          "$ref": "./diskRPCommon.json#/definitions/PurchasePlan",
          "description": "Purchase plan information to be added on the OS disk"
        },
        "supportedCapabilities": {
          "$ref": "./diskRPCommon.json#/definitions/SupportedCapabilities",
          "description": "List of supported capabilities to be added on the OS disk."
        },
        "propertyUpdatesInProgress": {
          "$ref": "#/definitions/PropertyUpdatesInProgress",
          "description": "Properties of the disk for which update is pending.",
          "readOnly": true
        },
        "supportsHibernation": {
          "type": "boolean",
          "description": "Indicates the OS on a disk supports hibernation."
        },
        "publicNetworkAccess": {
          "$ref": "./diskRPCommon.json#/definitions/PublicNetworkAccess"
        },
        "dataAccessAuthMode": {
          "$ref": "./diskRPCommon.json#/definitions/DataAccessAuthMode"
        },
        "optimizedForFrequentAttach": {
          "type": "boolean",
          "description": "Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine."
        }
      }
    },
    "PropertyUpdatesInProgress": {
      "description": "Properties of the disk for which update is pending.",
      "properties": {
        "targetTier": {
          "type": "string",
          "description": "The target performance tier of the disk if a tier change operation is in progress."
        }
      }
    },
    "ShareInfoElement": {
      "properties": {
        "vmUri": {
          "type": "string",
          "description": "A relative URI containing the ID of the VM that has the disk attached.",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "DiskNameParameter": {
      "name": "diskName",
      "in": "path",
      "description": "The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}